{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "AuthorityUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "authority",
      "outputs": [
        {
          "internalType": "contract Authority",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "flag",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract Authority",
          "name": "newAuthority",
          "type": "address"
        }
      ],
      "name": "setAuthority",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateFlag",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060008054336001600160a01b03199182168117835560018054909216909155604051909190829081907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908490a36040516001600160a01b0382169033907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a35050610484806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100725760003560e01c8063890eba6811610050578063890eba68146100a75780638da5cb5b146100d0578063bf7e214f146100fb57600080fd5b806313af4035146100775780633a7104d11461008c5780637a9e5e4b14610094575b600080fd5b61008a610085366004610408565b61010e565b005b61008a6101bc565b61008a6100a2366004610408565b61023d565b6001546100bb90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b6000546100e3906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6001546100e3906001600160a01b031681565b610124336000356001600160e01b031916610337565b6101645760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6101d2336000356001600160e01b031916610337565b61020d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161015b565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b6000546001600160a01b03163314806102d5575060015460405163b700961360e01b81523360048201523060248201526000356001600160e01b03191660448201526001600160a01b039091169063b700961390606401602060405180830381865afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d5919061042c565b6102de57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6001546000906001600160a01b031680158015906103d0575060405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b03198516604483015282169063b700961390606401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d0919061042c565b806103e857506000546001600160a01b038581169116145b949350505050565b6001600160a01b038116811461040557600080fd5b50565b60006020828403121561041a57600080fd5b8135610425816103f0565b9392505050565b60006020828403121561043e57600080fd5b8151801515811461042557600080fdfea2646970667358221220992c40966b5cc7f44d12f1df0502b5024045652c42fdb26749fbd072db4b42ba64736f6c634300080f0033",
    "sourceMap": "118:181:47:-:0;;;;;;;;;;;;-1:-1:-1;179:1:47;690:14:6;;149:10:47;-1:-1:-1;;;;;;690:14:6;;;;;;;-1:-1:-1;715:22:6;;;;;;;;755:32;;149:10:47;;179:1;149:10;;;;755:32:6;;179:1:47;;755:32:6;803:40;;-1:-1:-1;;;;;803:40:6;;;820:10;;803:40;;;;;629:222;;118:181:47;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100725760003560e01c8063890eba6811610050578063890eba68146100a75780638da5cb5b146100d0578063bf7e214f146100fb57600080fd5b806313af4035146100775780633a7104d11461008c5780637a9e5e4b14610094575b600080fd5b61008a610085366004610408565b61010e565b005b61008a6101bc565b61008a6100a2366004610408565b61023d565b6001546100bb90600160a01b900460ff1681565b60405190151581526020015b60405180910390f35b6000546100e3906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6001546100e3906001600160a01b031681565b610124336000356001600160e01b031916610337565b6101645760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6000805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0383169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b6101d2336000356001600160e01b031916610337565b61020d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161015b565b600180547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16600160a01b179055565b6000546001600160a01b03163314806102d5575060015460405163b700961360e01b81523360048201523060248201526000356001600160e01b03191660448201526001600160a01b039091169063b700961390606401602060405180830381865afa1580156102b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d5919061042c565b6102de57600080fd5b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b03831690811790915560405133907fa3396fd7f6e0a21b50e5089d2da70d5ac0a3bbbd1f617a93f134b7638998019890600090a350565b6001546000906001600160a01b031680158015906103d0575060405163b700961360e01b81526001600160a01b0385811660048301523060248301526001600160e01b03198516604483015282169063b700961390606401602060405180830381865afa1580156103ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d0919061042c565b806103e857506000546001600160a01b038581169116145b949350505050565b6001600160a01b038116811461040557600080fd5b50565b60006020828403121561041a57600080fd5b8135610425816103f0565b9392505050565b60006020828403121561043e57600080fd5b8151801515811461042557600080fdfea2646970667358221220992c40966b5cc7f44d12f1df0502b5024045652c42fdb26749fbd072db4b42ba64736f6c634300080f0033",
    "sourceMap": "118:181:47:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1994:151:6;;;;;;:::i;:::-;;:::i;:::-;;216:80:47;;;:::i;1544:442:6:-;;;;;;:::i;:::-;;:::i;191:16:47:-;;;;;-1:-1:-1;;;191:16:47;;;;;;;;;861:14:60;;854:22;836:41;;824:2;809:18;191:16:47;;;;;;;;565:20:6;;;;;-1:-1:-1;;;;;565:20:6;;;;;;-1:-1:-1;;;;;1052:55:60;;;1034:74;;1022:2;1007:18;565:20:6;888:226:60;594:26:6;;;;;-1:-1:-1;;;;;594:26:6;;;1994:151;910:33;923:10;935:7;;-1:-1:-1;;;;;;935:7:6;910:12;:33::i;:::-;902:58;;;;-1:-1:-1;;;902:58:6;;1571:2:60;902:58:6;;;1553:21:60;1610:2;1590:18;;;1583:30;-1:-1:-1;;;1629:18:60;;;1622:42;1681:18;;902:58:6;;;;;;;;;2069:5:::1;:16:::0;;-1:-1:-1;;2069:16:6::1;-1:-1:-1::0;;;;;2069:16:6;::::1;::::0;;::::1;::::0;;2103:34:::1;::::0;2069:16;;2116:10:::1;::::0;2103:34:::1;::::0;2069:5;2103:34:::1;1994:151:::0;:::o;216:80:47:-;910:33:6;923:10;935:7;;-1:-1:-1;;;;;;935:7:6;910:12;:33::i;:::-;902:58;;;;-1:-1:-1;;;902:58:6;;1571:2:60;902:58:6;;;1553:21:60;1610:2;1590:18;;;1583:30;-1:-1:-1;;;1629:18:60;;;1622:42;1681:18;;902:58:6;1369:336:60;902:58:6;284:4:47::1;277:11:::0;;;::::1;-1:-1:-1::0;;;277:11:47::1;::::0;;216:80::o;1544:442:6:-;1818:5;;-1:-1:-1;;;;;1818:5:6;1804:10;:19;;:76;;-1:-1:-1;1827:9:6;;:53;;-1:-1:-1;;;1827:53:6;;1845:10;1827:53;;;1971:34:60;1865:4:6;2021:18:60;;;2014:43;1827:9:6;1872:7;-1:-1:-1;;;;;;1872:7:6;2073:18:60;;;2066:107;-1:-1:-1;;;;;1827:9:6;;;;:17;;1883:18:60;;1827:53:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1796:85;;;;;;1894:9;:24;;-1:-1:-1;;1894:24:6;-1:-1:-1;;;;;1894:24:6;;;;;;;;1936:42;;1953:10;;1936:42;;-1:-1:-1;;1936:42:6;1544:442;:::o;990:546::-;1111:9;;1077:4;;-1:-1:-1;;;;;1111:9:6;1433:27;;;;;:77;;-1:-1:-1;1464:46:6;;-1:-1:-1;;;1464:46:6;;-1:-1:-1;;;;;1989:15:60;;;1464:46:6;;;1971:34:60;1491:4:6;2021:18:60;;;2014:43;-1:-1:-1;;;;;;2093:79:60;;2073:18;;;2066:107;1464:12:6;;;;;1883:18:60;;1464:46:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1432:96;;;-1:-1:-1;1523:5:6;;-1:-1:-1;;;;;1515:13:6;;;1523:5;;1515:13;1432:96;1425:103;990:546;-1:-1:-1;;;;990:546:6:o;14:154:60:-;-1:-1:-1;;;;;93:5:60;89:54;82:5;79:65;69:93;;158:1;155;148:12;69:93;14:154;:::o;173:247::-;232:6;285:2;273:9;264:7;260:23;256:32;253:52;;;301:1;298;291:12;253:52;340:9;327:23;359:31;384:5;359:31;:::i;:::-;409:5;173:247;-1:-1:-1;;;173:247:60:o;2184:277::-;2251:6;2304:2;2292:9;2283:7;2279:23;2275:32;2272:52;;;2320:1;2317;2310:12;2272:52;2352:9;2346:16;2405:5;2398:13;2391:21;2384:5;2381:32;2371:60;;2427:1;2424;2417:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "authority()": "bf7e214f",
    "flag()": "890eba68",
    "owner()": "8da5cb5b",
    "setAuthority(address)": "7a9e5e4b",
    "setOwner(address)": "13af4035",
    "updateFlag()": "3a7104d1"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"AuthorityUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"authority\",\"outputs\":[{\"internalType\":\"contract Authority\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flag\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract Authority\",\"name\":\"newAuthority\",\"type\":\"address\"}],\"name\":\"setAuthority\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateFlag\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/utils/mocks/MockAuthChild.sol\":\"MockAuthChild\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[\":ds-test/=lib/solmate/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solmate/src/auth/Auth.sol\":{\"keccak256\":\"0x2bc7e46ecae8db6dbd482164eb79665c0ebec7f970e442c5ac5cce870248eee6\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://5287312e75838e450390ce1d876f67105de906cf2f908bb58311262a2f51f82a\",\"dweb:/ipfs/QmPsnZHibbDS5VcB2uDz3cEqyRKxKpLs8LPQ7y6vyEWTKL\"]},\"test/utils/mocks/MockAuthChild.sol\":{\"keccak256\":\"0x07b786cf677d20ef40473bf8ee23513aa18a4e230600565db81f1b2c1a66a8fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b48aca9595caa3e15a97f921b327f1a25a2011dc7681e9a42833f52fe6aa5792\",\"dweb:/ipfs/QmcsZawrf91K4pHFMSJ4acKSipsdrM2aoPq53GVczrAwLk\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "AuthorityUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "authority",
          "outputs": [
            {
              "internalType": "contract Authority",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "flag",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract Authority",
              "name": "newAuthority",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAuthority"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateFlag"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/utils/mocks/MockAuthChild.sol": "MockAuthChild"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Auth.sol": {
        "keccak256": "0x2bc7e46ecae8db6dbd482164eb79665c0ebec7f970e442c5ac5cce870248eee6",
        "urls": [
          "bzz-raw://5287312e75838e450390ce1d876f67105de906cf2f908bb58311262a2f51f82a",
          "dweb:/ipfs/QmPsnZHibbDS5VcB2uDz3cEqyRKxKpLs8LPQ7y6vyEWTKL"
        ],
        "license": "AGPL-3.0-only"
      },
      "test/utils/mocks/MockAuthChild.sol": {
        "keccak256": "0x07b786cf677d20ef40473bf8ee23513aa18a4e230600565db81f1b2c1a66a8fe",
        "urls": [
          "bzz-raw://b48aca9595caa3e15a97f921b327f1a25a2011dc7681e9a42833f52fe6aa5792",
          "dweb:/ipfs/QmcsZawrf91K4pHFMSJ4acKSipsdrM2aoPq53GVczrAwLk"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/utils/mocks/MockAuthChild.sol",
    "id": 39034,
    "exportedSymbols": {
      "Auth": [
        21614
      ],
      "Authority": [
        21627
      ],
      "MockAuthChild": [
        39033
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:268:47",
    "nodes": [
      {
        "id": 39007,
        "nodeType": "PragmaDirective",
        "src": "33:23:47",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ]
      },
      {
        "id": 39010,
        "nodeType": "ImportDirective",
        "src": "60:54:47",
        "absolutePath": "lib/solmate/src/auth/Auth.sol",
        "file": "solmate/auth/Auth.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39034,
        "sourceUnit": 21628,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39008,
              "name": "Auth",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21614,
              "src": "68:4:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 39009,
              "name": "Authority",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21627,
              "src": "74:9:47",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39033,
        "nodeType": "ContractDefinition",
        "src": "118:181:47",
        "nodes": [
          {
            "id": 39022,
            "nodeType": "VariableDeclaration",
            "src": "191:16:47",
            "constant": false,
            "functionSelector": "890eba68",
            "mutability": "mutable",
            "name": "flag",
            "nameLocation": "203:4:47",
            "scope": 39033,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 39021,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "191:4:47",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39032,
            "nodeType": "FunctionDefinition",
            "src": "216:80:47",
            "body": {
              "id": 39031,
              "nodeType": "Block",
              "src": "266:30:47",
              "statements": [
                {
                  "expression": {
                    "id": 39029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39027,
                      "name": "flag",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39022,
                      "src": "277:4:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 39028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "284:4:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "277:11:47",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 39030,
                  "nodeType": "ExpressionStatement",
                  "src": "277:11:47"
                }
              ]
            },
            "functionSelector": "3a7104d1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39025,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39024,
                  "name": "requiresAuth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21519,
                  "src": "253:12:47"
                },
                "nodeType": "ModifierInvocation",
                "src": "253:12:47"
              }
            ],
            "name": "updateFlag",
            "nameLocation": "225:10:47",
            "parameters": {
              "id": 39023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "235:2:47"
            },
            "returnParameters": {
              "id": 39026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "266:0:47"
            },
            "scope": 39033,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "arguments": [
              {
                "expression": {
                  "id": 39012,
                  "name": "msg",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": -15,
                  "src": "149:3:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_magic_message",
                    "typeString": "msg"
                  }
                },
                "id": 39013,
                "isConstant": false,
                "isLValue": false,
                "isPure": false,
                "lValueRequested": false,
                "memberName": "sender",
                "nodeType": "MemberAccess",
                "src": "149:10:47",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 39017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "179:1:47",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 39016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "171:7:47",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 39015,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "171:7:47",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "171:10:47",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "expression": {
                  "argumentTypes": [
                    {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  ],
                  "id": 39014,
                  "name": "Authority",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 21627,
                  "src": "161:9:47",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Authority_$21627_$",
                    "typeString": "type(contract Authority)"
                  }
                },
                "id": 39019,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "typeConversion",
                "lValueRequested": false,
                "names": [],
                "nodeType": "FunctionCall",
                "src": "161:21:47",
                "tryCall": false,
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_Authority_$21627",
                  "typeString": "contract Authority"
                }
              }
            ],
            "baseName": {
              "id": 39011,
              "name": "Auth",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21614,
              "src": "144:4:47"
            },
            "id": 39020,
            "nodeType": "InheritanceSpecifier",
            "src": "144:39:47"
          }
        ],
        "canonicalName": "MockAuthChild",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39033,
          21614
        ],
        "name": "MockAuthChild",
        "nameLocation": "127:13:47",
        "scope": 39034,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 47
}